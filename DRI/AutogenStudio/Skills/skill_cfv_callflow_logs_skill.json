{"title":"cfv_callflow_logs_skill","content":"import time\nimport re\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.action_chains import ActionChains\n\ndef callFlow_response(callUUid):\n    driver = webdriver.Edge()\n    vars = {}\n    driver.get('https://ngc.skype.net/call/' + callUUid)  \n    driver.set_window_size(1936, 1048)\n    time.sleep(20)\n    driver.find_element(By.XPATH, \"//span[contains(@class, 'ms-Pivot-text') and text()='Call Flow']\").click()\n    driver.find_element(By.XPATH, \"//span[text()='Autodetect']\").click()\n    driver.find_element(By.XPATH, \"//span[text()='SIP traffic between the SBC and SIP proxy']\").click()\n    driver.find_element(By.XPATH, \"//span[contains(@class, 'ms-Button-label') and text()='Filters']\").click()\n    filter_text = driver.find_element(By.CSS_SELECTOR, \"input[placeholder='Input string']\")\n    filter_text.click()\n    filter_text.send_keys(\"SIP\")\n    driver.find_element(By.XPATH, \"//span[contains(@class, 'ms-Button-label') and text()='Add']\").click()\n    driver.find_element(By.XPATH, \"//span[contains(@class, 'ms-Button-label') and text()='Focus']\").click()\n\n    row_details = driver.find_elements(By.CSS_SELECTOR, \"div.sdRow\")\n    row_data = []\n\n    for row in row_details:\n        column_data = []\n        column_data.append(row.find_element(By.CSS_SELECTOR,\"div.sdLineNumber\").text.strip())\n        column_data.append(row.find_element(By.CSS_SELECTOR,\"div.sdTime\").text.strip())\n        arrow_element = row.find_element(By.CSS_SELECTOR,\"div.sdArrow\")\n        element_class = arrow_element.get_attribute(\"class\")\n        if 'right' in element_class:\n            column_data.append(\"right\")\n        elif 'left' in element_class:\n            column_data.append(\"left\")\n        else:\n            column_data.append(\"NA\")\n        column_data.append(row.find_element(By.CSS_SELECTOR,\"div.sdLatency\").text.strip())\n        column_data.append(row.find_element(By.CSS_SELECTOR,\"div.sdNote > span\").text.strip())\n        row_data.append(column_data)\n\n    # Define regular expressions\n    url_regex = r'sip:(.*?);'\n    response_code_regex = r'SIP/2.0 (\\d{3})'\n    url, response_code = None, None\n    # Loop through each element\n    for item in row_data:\n        # Extract URL\n        url_match = re.search(url_regex, item[-1])\n        if url_match:\n            url = url_match.group(1) \n        \n        # Extract Response Code\n        response_code_match = re.search(response_code_regex, item[-1])\n        if response_code_match:\n            response_code = response_code_match.group(1)\n        \n    return {\n        \"SipProviderURL\": url,\n        \"SIPreturnCode\": response_code,\n        \"SIPRAWLogs\": row_data\n    } \n","file_name":null,"description":null,"timestamp":"2024-04-03T17:04:36.064828","user_id":"default"}