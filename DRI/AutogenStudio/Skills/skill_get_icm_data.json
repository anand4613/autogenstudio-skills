{"title":"get_icm_data","content":"import requests\nimport json\nimport logging\n\n# Configuration for ICM cluster\nBEARER_TOKEN = \"\"\nAPI_ENDPOINT = f\"url\"\n\ndef fetch_incident_details(incident_id):\n    \"\"\"\n    Fetches incident details from the ICM cluster.\n    \n    Parameters:\n    - incident_id (int): The incident ID for fetching details.\n    \n    Returns:\n    - A JSON object containing the incident details.\n    \"\"\"\n    headers = {\n        'Authorization': BEARER_TOKEN,\n        'Content-type':'application/json; charset=UTF-8', \n        'Accept':'application/json'\n    }\n    params = {\n        \"db\": \"IcmDataWarehouse\",\n        \"csl\": f\"Incidents| join kind=inner  (IncidentDescriptions    | summarize Discussion = make_list(Text) by IncidentId) on IncidentId| where OwningTenantName == 'SxG Core 3P Genesys'| where IncidentId == {incident_id}| project IncidentId, Title, Summary, Discussion, Severity, Status, ModifiedDate| order by ModifiedDate desc nulls last| limit 1\",\n        \"properties\": {\n            \"Options\": {\n                \"servertimeout\": \"00:04:00\",\n                \"queryconsistency\": \"strongconsistency\",\n                \"query_language\": \"csl\",\n                \"request_readonly\": False,\n                \"request_readonly_hardline\": False\n            }\n        }\n    }\n\n    try:\n        response = requests.post(API_ENDPOINT, headers=headers, json=params)\n        if response.ok:\n            return format_result(response.json())\n        else:\n            logging.error(f\"Failed to fetch incident details. Response: {response.text}\")\n            return \"Failed to fetch incident details.\"\n    except Exception as e:\n        logging.exception(f\"An error occurred while fetching incident details: {str(e)}\")\n        return f\"An error occurred while fetching incident details: {str(e)}\"\n\ndef format_result(query_result):\n    \"\"\"\n    Formats the query result to extract relevant data.\n    \n    Parameters:\n    - query_result (JSON): The JSON object containing the query result.\n    \n    Returns:\n    - A formatted JSON object containing the extracted data.\n    \"\"\"\n    formatted_data = {}\n    \n    for frame in query_result:\n        if frame[\"FrameType\"] == \"DataTable\" and frame[\"TableName\"] == \"PrimaryResult\":\n            columns = [column[\"ColumnName\"] for column in frame[\"Columns\"]]\n            for row in frame[\"Rows\"]:\n                row_data = {}\n                for col, value in zip(columns, row):\n                    row_data[col] = value\n                formatted_data[\"result\"] = row_data\n    \n    return json.dumps(formatted_data, indent=4)\n\n# Example incident ID - Replace with your actual incident ID\nincident_id = 489412872\n# Execute the API call\nquery_result = fetch_incident_details(incident_id)\n# Print the result\nprint(query_result)\n","file_name":null,"description":null,"timestamp":"2024-04-03T19:44:50.716603","user_id":"default"}